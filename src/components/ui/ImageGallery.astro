---

import Image from './Image.astro';

const { type, images } = Astro.props;


let className: undefined | string = undefined;

if (typeof type !== 'undefined' && type === "big-right") {
  className = "image-gallery--big-right";
}

if (typeof type !== 'undefined' && type === "big-left") {
  className = "image-gallery--big-left";
}

---

<div class:list={["image-gallery", className]}>
  {images.map((image) => (
    <div class="image-gallery__image-cont">
      <Image src={image.src} alt={image.alt} />
    </div>
  ))}
</div>

<style lang="scss">
@import "../../styles/variables.scss";

.image-gallery {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(1, 1fr);
  gap: spacing(1);
  width: 100%;

  @include break("tablet", "down") {
    grid-template-columns: repeat(2, 1fr);
  }
}

.image-gallery--big-right {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, 1fr);

  grid-template-areas:
    "main main . ."
    "main main . .";

  @include break("tablet", "down") {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);

    grid-template-areas:
      ". ."
      ". ."
      "main main"
      "main main";
  }

  .image-gallery__image-cont:nth-child(1) {
    grid-area: main;
  }
}

.image-gallery--big-left {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, 1fr);

  grid-template-areas:
    ". . main main"
    ". . main main";

  @include break("tablet", "down") {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);

    grid-template-areas:
      ". ."
      ". ."
      "main main"
      "main main";
  }

  .image-gallery__image-cont:nth-child(1) {
    grid-area: main;
  }
}

.image-gallery__image-cont {
  aspect-ratio: 1;
  position: relative;
}
</style>
